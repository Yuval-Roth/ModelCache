[tool.poetry]
name = "modelcache"
version = "0.1.0"
description = "A caching framework for machine learning models"
authors = ["ModelCache Team"]
readme = "README.md"
packages = [
    { include = "modelcache" },
    { include = "modelcache_mm" }
]

[tool.poetry.dependencies]
python = "^3.8"
cachetools = "5.3.1"
DBUtils = "1.4"
Flask = "3.0.0"
numpy = "1.24.4"
onnxruntime = "1.16.1"
openai = "0.28.1"
pymilvus = "2.3.1"
PyMySQL = "1.1.0"
Requests = "2.31.0"
torch = "2.1.1"
transformers = "4.38.2"
faiss-cpu = "1.7.4"
redis = "5.0.1"
modelscope = "1.14.0"
fastapi = "0.115.5"
uvicorn = "0.32.0"
chromadb = "0.5.23"
elasticsearch = "7.10.0"
snowflake-id = "1.0.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.0.0"
pytest-cov = "^5.0.0"
pytest-mock = "^3.14.0"

[tool.poetry.scripts]
test = "pytest:main"
tests = "pytest:main"

[tool.pytest.ini_options]
minversion = "8.0"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "-ra",
    "--strict-markers",
    "--cov=modelcache",
    "--cov=modelcache_mm",
    "--cov-branch",
    "--cov-report=term-missing:skip-covered",
    "--cov-report=html",
    "--cov-report=xml",
    "--cov-fail-under=80",
    "-v"
]
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "slow: Slow running tests"
]

[tool.coverage.run]
source = ["modelcache", "modelcache_mm"]
omit = [
    "*/tests/*",
    "*/test_*",
    "*/__pycache__/*",
    "*/site-packages/*",
    "*/distutils/*",
    "*/venv/*",
    "*/.venv/*"
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if __name__ == .__main__.:",
    "raise AssertionError",
    "raise NotImplementedError",
    "if TYPE_CHECKING:",
    "if typing.TYPE_CHECKING:"
]

[tool.coverage.html]
directory = "htmlcov"

[tool.coverage.xml]
output = "coverage.xml"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"